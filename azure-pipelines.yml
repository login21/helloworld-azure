# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java--

trigger:
  - master

pool:
  vmImage: 'ubuntu-18.04'

jobs:
  - job: Build
    displayName: Build Maven Project
    steps:
      - task: Maven@3
        displayName: 'Maven Package'
        inputs:
          mavenPomFile: 'pom.xml'
      - task: CopyFiles@2
        displayName: 'Copy Files to artifact staging directory'
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)'
          Contents: '**/target/*.?(war|jar)'
          TargetFolder: $(Build.ArtifactStagingDirectory)
      - upload: $(Build.ArtifactStagingDirectory)
        artifact: drop
  - deployment: VMDeploy
    displayName: web
    dependsOn: Build
    environment:
      name:  new-env
      resourceType: VirtualMachine
      tags: web
    strategy:
      runOnce:
        deploy:
          steps:
            - bash: |
                # Modify deployment script based on the app type
                echo "Starting deployment script run"
                sudo cp '$(Pipeline.Workspace)/drop/target/MySampleProject-0.0.1-SNAPSHOT.war' '/opt/tomcat/webapps/'
                sudo systemctl restart tomcat